{"version":3,"sources":["components/App.js","components/Navbar.js","serviceWorker.js","index.js"],"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","valueOf","e","_isNativeReflectConstruct","Super","_getPrototypeOf","NewTarget","arguments","apply","_possibleConstructorReturn","ipfsClient","require","authorization","btoa","projectId","ipfs","url","headers","App","_Component","_inherits","_super","props","_this","_classCallCheck","getEvidencesOfCase","_asyncToGenerator","_callee","caseId","contextCase","j","evd","_context","console","log","getCaseId","cases","totalEvidences","securex","methods","getEvidenceById","setState","evidences","concat","_toConsumableArray","captureFile","event","preventDefault","file","target","files","reader","window","FileReader","readAsArrayBuffer","onloadend","buffer","Buffer","uploadFile","_ref2","_callee2","_yield$ipfs$add","cid","_context2","add","toString","registerEvidence","evidenceDetails","description","createdDate","send","from","account","on","hash","location","reload","loading","t0","_x","_x2","registerCase","caseDetails","courtId","caseDescription","startDateTime","newCaseId","alert","handleCaseInputChange","_objectSpread","_defineProperty","handleEvidenceInputChange","handleEvidenceCaseInput","uploadedImage","bind","_assertThisInitialized","_createClass","_componentWillMount","_callee3","_context3","loadWeb3","loadBlockchainData","_loadWeb","_callee4","_context4","ethereum","web3","Web3","enable","currentProvider","_loadBlockchainData","_callee5","accounts","networkAdress","caseCount","aCase","_context5","eth","getAccounts","net","getId","Contract","Securex","abi","totalCases","address","tipAmount","_this2","tipEvidenceOwner","_this3","React","createElement","Navbar","id","className","role","style","maxWidth","Card","Header","as","Body","Title","Form","onSubmit","Group","Label","Control","placeholder","onChange","rows","Button","variant","map","evidence","src","onClick","utils","toWei","Component","href","rel","width","height","Identicon","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2e546185.chunk.js","sourcesContent":["import Securex from \"../artifacts/src/contracts/Securex.sol/Securex.json\";\nimport React, { Component } from \"react\";\nimport { Card, Button, Form } from \"react-bootstrap\";\n\nimport Navbar from \"./Navbar\";\n\nimport Web3 from \"web3\";\nimport \"./App.css\";\n\n//Declare IPFS\nconst ipfsClient = require(\"ipfs-http-client\");\nconst projectId = \"2N2kHSm8zQMUB3TsTIQBvC3l0jy\";\nconst projectSecret = \"a3005ef5a99c6b19c16f7f0ea197f178\";\nconst authorization = \"Basic \" + btoa(projectId + \":\" + projectSecret);\n// const ipfs = ipfsClient({\n//   host: \"ipfs.infura.io\",\n//   port: 5001,\n//   protocol: \"https\",\n// }); // leaving out the arguments will default to these values\n\nconst ipfs = ipfsClient.create({\n  url: \"https://ipfs.infura.io:5001/api/v0\",\n  headers: {\n    authorization,\n  },\n});\nclass App extends Component {\n  async componentWillMount() {\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert(\n        \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\n      );\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3;\n    // Load account\n    const accounts = await web3.eth.getAccounts();\n\n    this.setState({ account: accounts[0] });\n    // Network ID\n    const networkId = await web3.eth.net.getId();\n    // const networkData = Securex.networks[networkId]\n    const networkAdress = \"0x83749167D4B8D7cAb243BD45875EA1fA2b2726a2\";\n    // const networkAdress = \"0xE4f76e3aE3C6D77Ad74E5276663F9e79D066CE6B\"\n\n    if (networkAdress) {\n      const securex = new web3.eth.Contract(Securex.abi, networkAdress);\n      console.log(\"here\");\n      console.log(securex);\n\n      this.setState({ securex });\n      const caseCount = await securex.methods.totalCases().call();\n      this.setState({ caseCount });\n      console.log(\"here\");\n      //console.log(securex);\n      console.log(caseCount);\n      for (var i = 1; i <= caseCount; i++) {\n        const aCase = await securex.methods.cases(i).call();\n        this.setState({\n          cases: [...this.state.cases, aCase],\n        });\n      }\n\n      console.log(this.state.cases);\n\n      this.setState({ loading: false });\n    } else {\n      window.alert(\"Securex contract not deployed to detected network.\");\n    }\n  }\n  getEvidencesOfCase = async () => {\n    console.log(\"Get Evidences Called\");\n    const caseId = this.state.getCaseId;\n    const contextCase = this.state.cases[caseId - 1];\n\n    for (var j = 1; j <= contextCase.totalEvidences; j++) {\n      let evd = await this.state.securex.methods\n        .getEvidenceById(caseId, j)\n        .call();\n      this.setState({\n        evidences: [...this.state.evidences, evd],\n      });\n    }\n    console.log(this.state.evidences);\n  };\n\n  captureFile = (event) => {\n    event.preventDefault();\n    const file = event.target.files[0];\n    const reader = new window.FileReader();\n    reader.readAsArrayBuffer(file);\n\n    reader.onloadend = () => {\n      this.setState({ buffer: Buffer(reader.result) });\n      console.log(\"buffer\", this.state.buffer);\n    };\n  };\n\n  uploadFile = () => {\n    console.log(\"Submitting file to ipfs...\");\n\n    //adding file to the IPFS\n    // ipfs.add(this.state.buffer, (error, result) => {\n    //   console.log(\"Ipfs result\", result);\n    //   if (error) {\n    //     console.error(error);\n    //     return;\n    //   }\n\n    //   this.setState({ loading: true });\n\n    //   console.log(this.state.evidenceDetails);\n\n    //   this.state.securex.methods\n    //     .registerEvidence(\n    //       this.state.evidenceDetails.caseId,\n    //       this.state.evidenceDetails.description,\n    //       result[0].hash,\n\n    //       this.state.evidenceDetails.createdDate\n    //     )\n    //     .send({ from: this.state.account })\n    //     .on(\"transactionHash\", (hash) => {\n    //       window.location.reload();\n    //       this.setState({ loading: false });\n    //     });\n    // });\n    return new Promise(async (resolve, reject) => {\n      console.log(\"new working...\");\n      try {\n        const { cid } = await ipfs.add(this.state.buffer);\n        resolve(cid.toString());\n\n        console.log({ cid });\n        console.log(cid.toString());\n\n        this.state.securex.methods\n          .registerEvidence(\n            this.state.evidenceDetails.caseId,\n            this.state.evidenceDetails.description,\n            cid.toString(),\n\n            this.state.evidenceDetails.createdDate\n          )\n          .send({ from: this.state.account })\n          .on(\"transactionHash\", (hash) => {\n            window.location.reload();\n            this.setState({ loading: false });\n          });\n      } catch (error) {\n        reject(error);\n      }\n    });\n  };\n  registerCase = () => {\n    console.log(\"Registering Case...\");\n\n    console.log(this.state.caseDetails);\n\n    this.setState({ loading: true });\n\n    this.state.securex.methods\n      .registerCase(\n        this.state.caseDetails.courtId,\n\n        this.state.caseDetails.caseDescription,\n        this.state.caseDetails.startDateTime\n      )\n      .send({ from: this.state.account })\n      .on(\"transactionHash\", (hash) => {\n        let newCaseId = this.state.cases.length + 1;\n        window.alert(\"Successfully registered with Case ID: \" + newCaseId);\n        this.setState({ loading: false });\n      });\n  };\n\n  handleCaseInputChange = (event) => {\n    this.setState({\n      caseDetails: {\n        ...this.state.caseDetails,\n        [event.target.name]: event.target.value,\n      },\n    });\n  };\n  handleEvidenceInputChange = (event) => {\n    this.setState({\n      evidenceDetails: {\n        ...this.state.evidenceDetails,\n        [event.target.name]: event.target.value,\n      },\n    });\n  };\n  handleEvidenceCaseInput = (event) => {\n    this.setState({\n      getCaseId: event.target.value,\n    });\n  };\n  tipEvidenceOwner(address, tipAmount) {\n    this.setState({ loading: true });\n    this.state.securex.methods\n      .tipEvidenceOwner(address)\n      .send({ from: this.state.account, value: tipAmount })\n      .on(\"transactionHash\", (hash) => {\n        this.setState({ loading: false });\n      });\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: \"\",\n      securex: null,\n      loading: true,\n      evidenceDetails: {\n        caseId: \"\",\n        description: \"\",\n\n        createdDate: \"\",\n      },\n      caseDetails: {\n        courtId: \"\",\n\n        caseDescription: \"\",\n        startDateTime: \"\",\n      },\n      uploadedImage: \"\",\n      cases: [],\n      evidences: [],\n      getCaseId: \"\",\n    };\n\n    this.uploadFile = this.uploadFile.bind(this);\n    this.captureFile = this.captureFile.bind(this);\n  }\n\n  render() {\n    return (\n      <div>\n        <Navbar account={this.state.account} />\n        {this.state.loading ? (\n          <div id=\"loader\" className=\"text-center mt-5\">\n            <p>Loading...</p>\n          </div>\n        ) : (\n          <div>\n            <div className=\"container-fluid mt-5\">\n              <div className=\"row\">\n                <main\n                  role=\"main\"\n                  className=\"col-lg-12 ml-auto mr-auto\"\n                  style={{ maxWidth: \"500px\" }}\n                >\n                  <div className=\"content mr-auto ml-auto\">\n                    <p>&nbsp;</p>\n                    <Card>\n                      <Card.Header as=\"h2\">Register Case</Card.Header>\n                      <Card.Body>\n                        <Card.Title>\n                          Provide the below details to register a case.\n                        </Card.Title>\n\n                        <Form\n                          onSubmit={(event) => {\n                            console.log(\"Form Submitted\");\n                            event.preventDefault();\n                            this.registerCase();\n                          }}\n                        >\n                          <Form.Group className=\"mb-3\">\n                            <Form.Label>Court ID</Form.Label>\n                            <Form.Control\n                              type=\"text\"\n                              placeholder=\"Court ID\"\n                              value={this.state.caseDetails.courtId}\n                              onChange={this.handleCaseInputChange}\n                              name=\"courtId\"\n                            />\n                          </Form.Group>\n                          <Form.Group className=\"mb-3\">\n                            <Form.Label>Case Description</Form.Label>\n                            <Form.Control\n                              as=\"textarea\"\n                              rows={3}\n                              placeholder=\"Case Description\"\n                              value={this.state.caseDetails.caseDescription}\n                              onChange={this.handleCaseInputChange}\n                              name=\"caseDescription\"\n                            />\n                          </Form.Group>\n                          <Form.Group className=\"mb-3\">\n                            <Form.Label>Start Date</Form.Label>\n                            <Form.Control\n                              type=\"date\"\n                              placeholder=\"Select Date\"\n                              value={this.state.caseDetails.startDateTime}\n                              onChange={this.handleCaseInputChange}\n                              name=\"startDateTime\"\n                            />\n                          </Form.Group>\n                          <Button variant=\"primary\" type=\"submit\">\n                            Register Case\n                          </Button>\n                        </Form>\n                      </Card.Body>\n                    </Card>\n                    <br />\n                    <br />\n                    <Card>\n                      <Card.Header as=\"h2\">Submit Evidence</Card.Header>\n                      <Card.Body>\n                        <Card.Title>\n                          Provide the below details to submit an evidence.\n                        </Card.Title>\n\n                        <Form\n                          onSubmit={(event) => {\n                            console.log(\"Form Submitted\");\n                            event.preventDefault();\n\n                            this.uploadFile();\n                          }}\n                        >\n                          <Form.Group className=\"mb-3\">\n                            <Form.Label>Case ID</Form.Label>\n                            <Form.Control\n                              type=\"text\"\n                              placeholder=\"Case ID\"\n                              value={this.state.evidenceDetails.caseId}\n                              onChange={this.handleEvidenceInputChange}\n                              name=\"caseId\"\n                            />\n                          </Form.Group>\n                          <Form.Group className=\"mb-3\">\n                            <Form.Label>Upload Evidence File</Form.Label>\n                            <Form.Control\n                              type=\"file\"\n                              id=\"fname\"\n                              onChange={this.captureFile}\n                              name=\"fileHash\"\n                              placeholder=\"Enter the Hash\"\n                            />\n                          </Form.Group>\n                          <Form.Group className=\"mb-3\">\n                            <Form.Label>Date</Form.Label>\n                            <Form.Control\n                              type=\"date\"\n                              placeholder=\"Select Date\"\n                              name=\"createdDate\"\n                              id=\"dateofbirth\"\n                              value={this.state.evidenceDetails.createdDate}\n                              onChange={this.handleEvidenceInputChange}\n                            />\n                          </Form.Group>\n\n                          <Form.Group className=\"mb-3\">\n                            <Form.Label>Evidence Description</Form.Label>\n                            <Form.Control\n                              as=\"textarea\"\n                              rows={3}\n                              placeholder=\"Evidence Description\"\n                              value={this.state.evidenceDetails.description}\n                              onChange={this.handleEvidenceInputChange}\n                              name=\"description\"\n                            />\n                          </Form.Group>\n\n                          <Button variant=\"primary\" type=\"submit\">\n                            Submit Evidence\n                          </Button>\n                        </Form>\n                      </Card.Body>\n                    </Card>\n                    <br />\n                    <br />\n                    <Card>\n                      <Card.Header as=\"h2\">Get Evidences of a case</Card.Header>\n                      <Card.Body>\n                        <Form\n                          onSubmit={(event) => {\n                            console.log(\"Form Submitted\");\n                            event.preventDefault();\n\n                            this.getEvidencesOfCase();\n                          }}\n                        >\n                          <Form.Group className=\"mb-3\">\n                            <Form.Label>Case ID</Form.Label>\n                            <Form.Control\n                              type=\"text\"\n                              placeholder=\"Case ID\"\n                              value={this.state.getCaseId}\n                              onChange={this.handleEvidenceCaseInput}\n                              name=\"caseId\"\n                            />\n                          </Form.Group>\n\n                          <Button variant=\"primary\" type=\"submit\">\n                            Get Evidences\n                          </Button>\n                        </Form>\n                      </Card.Body>\n                    </Card>\n                    {this.state.evidences.length > 0 ? (\n                      this.state.evidences.map((evidence, key) => {\n                        return (\n                          <div className=\"card mb-4\" key={key}>\n                            <ul\n                              id=\"imageList\"\n                              className=\"list-group list-group-flush\"\n                            >\n                              <li className=\"list-group-item\">\n                                <p className=\"text-center\">\n                                  <img\n                                    src={`https://ipfs.io/ipfs/${evidence[1]}`}\n                                    style={{ maxWidth: \"420px\" }}\n                                  />\n                                </p>\n                                <p>Evidence Description: {evidence[0]}</p>\n                                <p>Date: {evidence[2]}</p>\n                                <button\n                                  className=\"btn btn-link btn-sm float-right pt-0\"\n                                  name={key}\n                                  onClick={(event) => {\n                                    let tipAmount = window.web3.utils.toWei(\n                                      \"0.1\",\n                                      \"Ether\"\n                                    );\n\n                                    this.tipEvidenceOwner(\n                                      evidence[3],\n                                      tipAmount\n                                    );\n                                  }}\n                                >\n                                  TIP 0.1 MATIC\n                                </button>\n                              </li>\n                            </ul>\n                          </div>\n                        );\n                      })\n                    ) : (\n                      <p></p>\n                    )}\n\n                    <p>&nbsp;</p>\n                  </div>\n                </main>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\nimport Identicon from 'identicon.js';\n\n\nclass Navbar extends Component {\n\n  render() {\n    return (\n      <nav className=\"navbar navbar-dark fixed-top flex-md-nowrap shadow\">\n        <a\n          className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\n          href=\"\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        > \n          SECUREX\n        </a>\n        <ul className=\"navbar-nav px-3\">\n          <li className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\n            <small className=\"text-secondary\">\n              <small id=\"account\">{this.props.account}</small>\n            </small>\n            { this.props.account\n              ? <img\n                className='ml-2'\n                width='30'\n                height='30'\n                src={`data:image/png;base64,${new Identicon(this.props.account, 30).toString()}`}\n              />\n              : <span></span>\n            }\n          </li>\n        </ul>\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}